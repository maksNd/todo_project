version: '3.9'

services:
  db:
    image: postgres:15.1-alpine
    restart: always
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: postgres
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      timeout: 3s
      retries: 10
      interval: 2s

  api:
    image: maksnd/todo_project:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      PORT: 5432
      DB_HOST: db
    depends_on:
      db:
        condition: service_healthy

  frontend:
    image: sermalenk/skypro-front:lesson-34
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started

  migrations:
    image: maksnd/todo_project:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      DEBUG: 'True'
      PORT: 5432
      DB_HOST: db
    command: python manage.py migrate
