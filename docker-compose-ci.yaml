version: '3.8'

services:
  db:
    image: postgres:15.1-alpine
    restart: always
    #    env_file:
    #      - .env
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: postgres

    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      timeout: 3s
      retries: 10
      interval: 2s

  api:
#    build: .
    image: maksnd/todo_project:$GITHUB_RUN_ID
#    env_file: .env
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      PORT: 5432
      DB_HOST: db
    depends_on:
      db:
        condition: service_healthy
    #      migrations:
    #        condition: service_completed_successfully
    ports:
      - "8000:8000"
    volumes:
      - ./core:/opt/core
      - ./todolist:/opt/todolist
  #      - django_static:/opt/static
  #    healthcheck:
  #      test: [ "CMD", "curl", "-f", "http://localhost:80/" ]
  #      interval: 5s
  #      timeout: 10s
  #      retries: 3

  frontend:
    image: sermalenk/skypro-front:lesson-34
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./static:/usr/share/nginx/html/static
  #    healthcheck:
  #      test: [ "CMD", "curl", "-f", "http://localhost:80/" ]
  #      interval: 5s
  #      timeout: 10s
  #      retries: 3

  migrations:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
#      frontend:
#        condition: service_healthy
      db:
        condition: service_healthy
#    env_file:
#      - .env
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      PORT: 5432
      DB_HOST: db
    healthcheck:
      test: [ "CMD", "sh", "-c", "python ./manage.py migrate --list | grep -q 'No migrations to apply'; if [ $$? -eq 0 ]; then exit 1; else exit 0; fi" ]
      interval: 5s
      timeout: 10s
      retries: 3
    command: >
      sh -c "python ./manage.py migrate"

#volumes:
#  django_static:

